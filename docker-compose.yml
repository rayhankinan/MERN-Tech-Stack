version: '3.8'
services:
  # GraphQL Service
  backend-app:
    build:
      context: ./Server-Side-MERN-Tech-Stack
      dockerfile: Dockerfile
    container_name: mern-backend-app
    restart: always
    environment:
      PORT: ${BACKEND_PORT}
      MONGO_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_PORT: ${ELASTIC_PORT}
    volumes:
      - ./Server-Side-MERN-Tech-Stack:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - db
      - cache
      # - search

  # Nginx Service
  web-server:
    image: nginx:latest
    container_name: mern-web-server
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Server-Side-MERN-Tech-Stack:/app
      - /app/node_modules
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MongoDB Service
  db:
    image: mongo:latest
    container_name: mern-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - db:/data/db
    networks:
      - app-network

  # db-manager:
  #   image: mongo-express:latest
  #   container_name: mern-db-manager
  #   restart: always
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db

  # Redis Service
  cache:
    image: redis:latest
    container_name: mern-cache
    restart: always
    volumes:
      - cache:/data
    networks:
      - app-network

  # Elasticsearch Service
  # search:
  #   image: elasticsearch:8.5.2
  #   container_name: mern-search
  #   restart: always
  #   environment:
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: -Xms1g -Xmx1g
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  #   volumes:
  #     - search:/usr/share/elasticsearch/data
  #   networks:
  #     - app-network

  # search-manager:
  #   image: kibana:8.5.2
  #   container_name: mern-search-manager
  #   restart: always
  #   environment:
  #     KIBANA_PASSWORD: ${ELASTIC_PASSWORD}
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - search

  # logstash:
  #   image: logstash:8.5.2
  #   container_name: mern-logstash
  #   restart: always
  #   networks:
  #     - app-network
  #   depends_on:
  #     - search
  #     - db

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  db:
    driver: local
  cache:
    driver: local
  search:
    driver: local